{
  "name": "grunt-bushcaster",
  "version": "0.0.7",
  "description": "grunt task for bushcasting.. erm... i mean cachebusting",
  "main": "Gruntfile.js",
  "scripts": {
    "test": "grunt"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/stryju/grunt-bushcaster.git"
  },
  "keywords": [
    "gruntplugin",
    "grunt",
    "cachebuster",
    "requirejs",
    "hash",
    "cache",
    "update references"
  ],
  "author": {
    "name": "tomasz stryjewski",
    "email": "stryjewski.t@gmail.com",
    "url": "stryju.pl"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/stryju/grunt-bushcaster/blob/master/LICENSE-MIT"
    }
  ],
  "bugs": {
    "url": "https://github.com/stryju/grunt-bushcaster/issues"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-jshint": "~0.6.4",
    "grunt-contrib-requirejs": "~0.4.1",
    "matchdep": "~0.1.2",
    "time-grunt": "~0.1.1",
    "grunt-contrib-nodeunit": "~0.2.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "dependencies": {
    "grunt": "~0.4.1"
  },
  "readme": "# grunt-bushcaster\n\n> cachebuster with a function to update references in the sources\n> (useful for requirejs dependencies)\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-bushcaster --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-bushcaster');\n```\n\n## The \"bushcaster\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `bushcaster` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  bushcaster: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.hashLength\nType: `Number`\nDefault value: `8`\n\nLength of the hash to be added.\n\n#### options.removeSources\nType: `Boolean`\nDefault value: `false`\n\nShould we removed the source files?\n\n#### options.requirejs\nType: `Boolean`\nDefault value: `true`\n\nAre we processing requirejs modules?\nSome internal processing relies on this variable.\n\n#### options.refPathTransform\nType: `Function`\nDefault value: `null`\n\nFunction to transform the updated reference (in case you need to change path? url?)\n\n#### options.noProcess\nType: `String|Boolean`\nDefault value: `false`\n\nGlobbing pattern for files that sould not be processed with updated references.\nUseful for libs, like jquery, or so - might speed up the whole process a bit.\n\n#### options.onComplete\nType: `Function`\nDefault value: `null`\n\nFunction to handle the hash map, so you can write the output to json or sth ;-)\n\n### Usage Examples\n\n```js\ngrunt.initConfig({\n  'bushcaster' : {\n    test : {\n      files : [\n        {\n          expand : true,\n          cwd    : 'test/dist/',\n          src    : [ '**/*.js' ],\n          dest   : 'test/build/'\n        }\n      ],\n\n      options : {\n\n        // length of the hash to be added\n        hashLength : 8,\n\n        // should we removed the source files?\n        removeSources : true,\n\n        // globbing pattern for files that should not be processed with updated references\n        // useful for libs, like jquery, or so - might speed up the whole process a bit\n        noProcess : 'test/dist/vendor/**/*.js',\n\n        // this is handy, if your module references' path differ from the current CWD structure\n        // in  this example, we add 1 level of depth - the 'root/' folder\n        refPathTransform : function ( ref ) {\n           return 'root/' + ref;\n        },\n\n        // function to handle the hash map\n        // so you can write the output to json or sth ;-)\n        // in this case, we write json AND php output of our map :-)\n        onComplete  : function ( map, files ) {\n          var arr = [];\n\n          files.forEach( function ( file ) {\n            arr.push( '\\'' + file + '\\'=>\\'' + map[ file ] + '\\'' );\n          });\n\n          var out = '<?php\\n\\n$files = [\\n\\t' + arr.join( ',\\n\\t' ) + '\\n];\\n';\n\n          grunt.file.write( 'test/dist/map.php', out );\n          grunt.file.write( 'test/dist/map.json', JSON.stringify( map ) );\n        }\n      }\n    }\n  }\n})\n```\n\n## todos\n- support reading the config from requirejs config\n- more sophisticated testing\n- lots'more afaik...\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n* 0.0.7 2013-11-22 fixed error with map / files objects not being purged for more than one task\n* 0.0.6 2013-11-06 tweaked the way the requirejs references processing work ...oh, and docs\n* 0.0.5 2013-10-30 erm... docs fix\n* 0.0.4 2013-10-30 further cleaning, fixed keywords, improved docs, added a proper license\n* 0.0.3 2013-10-28 added first batch of tests, cleaned up\n* 0.0.2 2013-10-28 added support for `dest` option\n* 0.0.1 2013-10-28 ported requirejs-cachebuster task and renamed to bushcaster\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/stryju/grunt-bushcaster",
  "_id": "grunt-bushcaster@0.0.7",
  "_shasum": "952056ef8599ef4481561f204eb27fde2edd4eca",
  "_from": "https://registry.npmjs.org/grunt-bushcaster/-/grunt-bushcaster-0.0.7.tgz",
  "_resolved": "https://registry.npmjs.org/grunt-bushcaster/-/grunt-bushcaster-0.0.7.tgz"
}

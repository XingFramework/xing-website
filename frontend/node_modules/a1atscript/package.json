{
  "name": "a1atscript",
  "private": false,
  "version": "0.4.5",
  "description": "The Angular 2 Polyfill.",
  "homepage": "https://github.com/hannahhoward/a1atscript",
  "repository": {
    "type": "git",
    "url": "git://github.com/hannahhoward/a1atscript.git"
  },
  "bugs": {
    "url": "https://github.com/hannahhoward/a1atscript/issues"
  },
  "main": "dist/a1atscript.bundle.js",
  "devDependencies": {
    "angular": "^1.3.15",
    "angular-mocks": "^1.3.15",
    "angular-new-router": "^0.5.3",
    "assert": "git+https://github.com/angular/assert#dist",
    "babel": "^5.4.4",
    "babelify": "^6.0.2",
    "gulp": "^3.8.9",
    "gulp-bump": "^0.2.2",
    "gulp-connect": "^2.0.6",
    "gulp-rename": "^1.2.0",
    "gulp-traceur": "git+https://github.com/vojtajina/gulp-traceur#fix-sourcemaps",
    "karma": "^0.12.24",
    "karma-babel-preprocessor": "^5.1.0",
    "karma-browserify": "^4.1.2",
    "karma-chrome-launcher": "^0.1.5",
    "karma-cli": "0.0.4",
    "karma-commonjs": "0.0.13",
    "karma-firefox-launcher": "^0.1.4",
    "karma-jasmine": "^0.2.2",
    "karma-requirejs": "^0.2.2",
    "karma-traceur-preprocessor": "^0.4.0",
    "requirejs": "^2.1.15",
    "traceur": "^0.0.86",
    "babel-loader": "^5.3.2",
    "node-libs-browser": "^0.5.2",
    "webpack": "^1.10.1"
  },
  "scripts": {
    "test": "karma start --browsers Firefox --single-run; karma start karma.conf.babel.js --browsers Firefox --single-run",
    "dist": "webpack"
  },
  "jspm": {
    "main": "dist/a1atscript.bundle.js",
    "format": "global"
  },
  "author": {
    "name": "Hannah Howard",
    "email": "hannah@techgirlwonder.com"
  },
  "license": "Apache-2.0",
  "readme": "[![Code Climate](https://codeclimate.com/github/hannahhoward/a1atscript/badges/gpa.svg)](https://codeclimate.com/github/hannahhoward/a1atscript) [![Build Status](https://travis-ci.org/hannahhoward/a1atscript.svg?branch=master)](https://travis-ci.org/hannahhoward/a1atscript)\n\n# A-1 AtScript\n\n[![Join the chat at https://gitter.im/hannahhoward/a1atscript](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/hannahhoward/a1atscript?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nThis is a package that uses annotations to provide syntactic sugar around Angular 1.x's Dependency Injection mechanism. It is designed to be a \"bridge\" to Angular 2.0  -- to get you as close as possible to writing Angular 2.0 like code in Angular 1.x. More features will be added as Angular 2.0's feature set becomes more clear.\n\n## Initial setup\n\n> You must be building your Angular 1.x with an ES Next transpiler. The system has been tested with both Babel.js and Traceur. See \"Using a transpiler other than Traceur\" for important caveats if you are not using Traceur. Check for tutorials on the internet for how to setup a JS build system that incorporates ES6.\n\n#### Install the module\n\n```bash\nbower install a1atscript --save\n```\n\nor\n\n```bash\nnpm install a1atscript\n```\n\n#### Angular Type Annotations\n\n```javascript\nimport {Controller, Service} from 'bower_components/dist/a1atscript.js';\n// or appropriate path for your project\n\n@Controller('ExampleController', ['$scope', 'SomeService'])\nexport class ExampleController {\n  constructor($scope, SomeService) {\n  }\n}\n\n@Service('ExampleService', ['SomeService'])\nexport class ExampleService {\n\tconstructor(SomeService) {\n\t}\n}\n```\n\n#### Setting up modules\n\n\n```javascript\nimport {Module} from 'bower_components/dist/a1atscript.js';\nimport {\n  ExampleController,\n  ExampleService\n} from './theCodeBlockRightAbove';\nimport { AnotherModule } from './anotherA1AtScriptModule';\n\nexport var MyModule = new Module('MyModule', [\n\tAnotherModule,\n\tExampleController,\n\tExampleService,\n\t'aRegularAngularModule'\n]);\n```\n\nNote you can mix other modules, controllers, and services all together in the list -- A1AtScript will figure out how to sort out the module definition.\n\nYou can include regular angular modules by just referencing them as strings.\n\n#### Shortform notation\n\nIf you want to quickly define a module with only one component... just use two annotations\n\n```javascript\n@AsModule('ServiceModule')\n@Service('ExampleService')\nclass ExampleService {\n  constructor() {\n    this.value = 'Test Value';\n  }\n}\n```\n\n#### Compile your main app module\n\n```javascript\nimport {bootstrap, Module} from 'bower_components/dist/a1atscript.js';\nimport { MyModule } from './myModule'\n\nvar AppModule = Module('AppModule', [\n  MyModule\n]);\n\n// The string passed in is prefixed to then names\n// of all of the modules when they are instantiated with\n// Angular\nbootstrap(AppModule, \"myAppPrefix\");\n```\n\n## Get ready for Angular 2!\n\nAngular 2 introduces an entirely new syntax for working with directives. The most common type of directive is a Component. The good news is with A1AtScript you can write components right now, using a syntax remarkably similar to Angular 2.\n\n```javascript\n@Component({\n  selector: \"awesome\",\n  properties: [ \"apple\" ],\n  appInjector: [\"ExampleService\"]\n})\n@View({\n  templateUrl: \"awesome.tpl.html\"\n})\nclass AwesomeComponent {\n  constructor(exampleService) {\n    this.exampleService = exampleService;\n    this.test = \"test\";\n  }\n  setValue() {\n    this.value = this.exampleService.value;\n  }\n}\n```\n\n```html\n<awesome apple=\"stringLiteral\"></awesome>\n<awesome bind-apple=\"expression\"></awesome>\n```\n\n### Routeable Components\n\nYou can take your Angular 2 prep a step further by using A1AtScript with the new Angular router, using routable component syntax from Angular 2.\n\nmake sure to install the new router:\n\n```\nnpm install angular-new-router\n```\n\nThen you can build an amazing route aware app using a super simple syntax like this:\n\napp.js:\n\n```javascript\n@Component({})\n@View({\n  template: \"<p>Sub</p>\"\n})\nclass SubComponent {\n\n}\n\n@Component({})\n@View({\n  template: \"<p>Home</p><ng-viewport></ng-viewport>\"\n})\n@RouteConfig({\n  path: \"/sub\", component: SubComponent\n})\nclass HomeComponent {\n}\n\n// the AsModule annotation is an extra need to setup Angular's module system on the top level component for now\n@AsModule('AppModule', ['templates', 'ngNewRouter', HomeComponent, SubComponent])\n@Component({\n  selector: \"awesome\"\n})\n@View({\n  templateUrl: \"app.tpl.html\"\n})\n@RouteConfig({\n  path: \"/home\", component: HomeComponent\n})\nclass AppComponent {\n}\n\nbootstrap(AppComponent)\n```\n\napp.tpl.html:\n```html\n<ng-viewport><ng-viewport>\n```\n\nindex.html:\n```html\n<body>\n   <awesome></awesome>\n<body>\n```\n\nnavigate to /home/sub would yield:\n```html\n<body>\n\t<awesome>\n\t\t<ng-viewport>\n\t\t\t<p>Home</p>\n\t\t\t<ng-viewport>\n\t\t\t\t<p>Sub</p>\n\t\t\t</ng-viewport>\n\t\t</ng-viewport>\n\t</awesome>\n<body>\n```\n\nThat's what Angular 2 routing is likely to look like -- except you can use this today!\n\n*Note: the name of the ng-viewport directive is about to change in the next release of the new Angular router to ng-outlet*\n\n### Notes:\n\nfunctionally the initial component declaration above is equivalent to:\n\n```javascript\nangular.directive('awesome', function() {\n  return {\n  \trestrict: 'E',\n  \tbindToController: {\n  \t  apple: \"@apple\"\n  \t  // a setter is created automatically on your\n  \t  // controller so that your controller can access this.apple\n  \t  ___bindable___apple: \"=?bindApple\"\n  \t},\n  \tcontroller, ['ExampleService', AwesomeComponent]\n  \tcontrollerAs: 'awesome',\n  \tscope: {},\n  \ttemplateUrl: \"awesome.tpl.html\",\n  }\n  function AwesomeComponent(exampleService) {\n    this.exampleService = exampleService;\n  \tthis.test = \"test\";\n  }\n  AwesomeComponent.prototype.setValue = function() {\n    this.value = this.exampleService.value\n  }\n});\n```\n\nThe syntax is supported in a Angular 1.3+ (in 1.3 it will set bindToController to true, and set properties on scope, because bindToController object syntax is 1.4 only). If angular 1.x adopts a built-in component feature (see [https://github.com/angular/angular.js/issues/10007](https://github.com/angular/angular.js/issues/10007)) then this module will be updated to use that feature when it is available.\n\nOther features:\n\n1. Selector is a very, very basic css selector. If you pass '[awesome]', your directive will be called awesome and it'll be set restrict: 'A', and if you pass '.awesome' it'll be set restrict: 'C'\n2. What about properties? Well, rather than force you to use Angular 1's bizarre character syntax, we try to emulate Angular 2's behavior. if you call your directive with a plain old attribute, it's just interpreted as a string literal. If you call it with a bind- prefix, it gets passed the value of the expression. Sorry, no [] abbreviated syntax here -- Angular 1.x doesn't let you specify scope properties that have [] characters in them\n2. Services is optional for injecting dependencies into your component class\n3. Class inheritance does work with components, but you'll need to define annotations on the child class\n4. Component supports somes Angular1 customizations. You can specify a require or transclude property. You can also specify a custom controllerAs value.\n5. Template annotation supports simply \"url\" for templateUrls and 'inline' for inline templates\n\nAngular 2's Directive will be supported in a future release. I'm still examining the best way to port this to Angular 1.x and maintain a similar feature set and syntax to 2.0.\n\n## Wrapping up\n\n#### More Info\n\nCheck out the [Wiki](https://github.com/hannahhoward/a1atscript/wiki) for more specialized topics.\n\n#### What's included?\n\nThe /src folder contains the es6 source files so that you can package up A1AtScript using whatever packaging system is most comfortable for you. However, if you want an ES5 global build, in dist is a1atscript.bundle.js that will load everything as global.\n\n\n### Wait a second, I thought AtScript was called TypeScript now\n\nA new name is coming as soon as I get big enough to be able to lose what little brand recognition I have.\n\n# That's It. Enjoy\n",
  "readmeFilename": "README.md",
  "_id": "a1atscript@0.4.5",
  "_shasum": "2bd948526abe6f0ab077a224aaf851554747bdd8",
  "_from": "https://registry.npmjs.org/a1atscript/-/a1atscript-0.4.5.tgz",
  "_resolved": "https://registry.npmjs.org/a1atscript/-/a1atscript-0.4.5.tgz"
}

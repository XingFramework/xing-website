{
  "name": "angular-fontawesome",
  "version": "0.3.1",
  "author": {
    "name": "Paul Marbach",
    "email": "paul@picardylearning.com"
  },
  "description": "Angular directive for FontAwesome",
  "scripts": {
    "test": "./node_modules/bower/bin/bower install; ./node_modules/karma/bin/karma start --browsers Firefox --single-run"
  },
  "main": "dist/angular-fontawesome.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/picardy/angular-fontawesome.git"
  },
  "bugs": {
    "url": "https://github.com/picardy/angular-fontawesome/issues"
  },
  "keywords": [
    "angular",
    "fontawesome",
    "directive"
  ],
  "devDependencies": {
    "bower": "*",
    "grunt": "^0.4.4",
    "grunt-contrib-clean": "*",
    "grunt-contrib-copy": "*",
    "grunt-contrib-uglify": "*",
    "grunt-contrib-jshint": "*",
    "grunt-karma": "^0.8.2",
    "grunt-bump": "~0.0.15",
    "karma": "^0.12.9",
    "karma-ng-scenario": "^0.1.0",
    "karma-jasmine": "*",
    "karma-chrome-launcher": "*",
    "karma-firefox-launcher": "*",
    "karma-phantomjs-launcher": "*",
    "karma-safari-launcher": "*",
    "karma-ng-html2js-preprocessor": "^0.1.0"
  },
  "license": "MIT",
  "readme": "# angular-fontawesome [![Build Status](https://travis-ci.org/picardy/angular-fontawesome.svg?branch=master)](https://travis-ci.org/picardy/angular-fontawesome)\n\nA simple directive for [FontAwesome](http://fontawesome.io/) icons. Avoid writing a massive `ngStyle` declaration for your FontAwesome integration, and use the power of Angular to make interactive icon-based widgets.\n\n### Usage\n\n1. Include the module in your own app.\n\n```javascript\nangular.module('myApp', ['picardy.fontawesome'])\n```\n\n2. Use the directive on any page which bootstraps your app.\n\n```html\n<fa name=\"loading\" spin ng-style=\"{'color': checkColor}\"></fa>\n<!-- $scope.checkColor = 'blue' -->\n<!-- rendered -->\n<i class=\"fa fa-loading fa-spin\" style=\"color:blue;\"></i>\n```\n\n### Attributes\n\nThe `fa` directive's attributes map to the [classes used by FontAwesome\\.\n\n```html\n<fa name=\"ICON-NAME\"\n    size=\"1-5|large\"\n    flip=\"horizontal|vertical\"\n    rotate=\"90|180|270\"\n    spin\n    border\n    list\n></fa>\n```\n\n##### name\nThe icon's [name](http://fontawesome.io/icons/), such as `fa-loading` or `fa-square`.\n```html\n<fa name=\"github\"></fa>\n<!-- rendered -->\n<i class=\"fa fa-github\"></i>\n```\n\n##### size\nThe icon's font size, either defined by a multiplier (1-5), or by the string `\"large\"`.\n```html\n<fa name=\"square\" size=\"{{ currentSize }}\"></fa>\n<!-- $scope.currentSize = 3 -->\n<!-- rendered -->\n<i class=\"fa fa-square fa-3x\"></i>\n```\n\n##### flip\nFlip the icon `horizontal` or `vertical`.\n```html\n<fa name=\"pencil\" flip=\"vertical\"></fa>\n<!-- rendered -->\n<i class=\"fa fa-pencil fa-flip-vertical\"></i>\n```\n\n##### rotate\nRotate the icon `90`, `180`, or `270` degrees.\n```html\n<fa name=\"floppy-o\" rotate=\"90\"></fa>\n<!-- rendered -->\n<i class=\"fa fa-floppy-o fa-rotate-90\"></i>\n```\n\n##### spin\nAnimate the icon to spin. You don't need to provide true to use the boolean attributes:\n```html\n<fa name=\"loading\" spin></fa>\n<!-- rendered -->\n<i class=\"fa fa-loading fa-spin\"></i>\n```\nYou can pass in `true` or `false` to the attribute as well, allowing the spin class to be be easily toggleable.\n```html\n<fa name=\"{{ isLoading ? 'loading' : 'check' }}\" spin=\"{{ isLoading }}\"></fa>\n<!-- rendered -->\n<i class=\"fa fa-loading fa-spin\"></i>\n```\n\n##### border\n```html\n<fa name=\"envelope\" border></fa>\n<!-- rendered -->\n<i class=\"fa fa-envelope fa-border\"></i> \n```\n\n##### fixed width\n```html\n<fa name=\"book\" fw></fa>\n<!-- rendered -->\n<i class=\"fa fa-book fa-fw\"></i>\n```\n\n##### inverse\n```html\n<fa name=\"home\" inverse></fa>\n<!-- rendered -->\n<i class=\"fa fa-home fa-inverse\"></i>\n```\n\n##### list\nThis directive autodetects if you're setup to do `fa-li` and then takes care of it for you.\n```html\n<ul class=\"fa-ul\">\n  <li>\n    <fa name=\"square\"></fa>\n    Text here\n    <fa class=\"check\"></fa>\n  </li>\n</ul>\n<!-- rendered -->\n<ul class=\"fa-ul\">\n  <li>\n    <i class=\"fa fa-li fa-square\"></i>\n    Text here\n    <!-- <fa>s that aren't the first <fa> in the <li> do not automatically get the fa-li class -->\n    <i class=\"fa fa-check\"></i>\n  </li>\n</ul>\n```\n\n##### stack\ncoming soon\n\n\n### TODO\n * `fa-stack` support\n * `pull=\"left\"`, `pull=\"right\"`\n * demos on Github pages\n\n\n### License\nMIT Licensed by [Picardy](http://beta.picardylearning.com).\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/picardy/angular-fontawesome",
  "_id": "angular-fontawesome@0.3.1",
  "_shasum": "22dd219f9bd83db626b4fa1e5369252365447c1a",
  "_from": "https://registry.npmjs.org/angular-fontawesome/-/angular-fontawesome-0.3.1.tgz",
  "_resolved": "https://registry.npmjs.org/angular-fontawesome/-/angular-fontawesome-0.3.1.tgz"
}

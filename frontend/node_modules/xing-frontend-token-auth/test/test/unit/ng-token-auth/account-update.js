// Generated by CoffeeScript 1.10.0
(function() {
  suite('account update', function() {
    var dfd;
    dfd = null;
    suite('successful update', function() {
      var successResp, updatedUser;
      updatedUser = angular.copy(validUser, {
        operating_thetan: 123
      });
      successResp = {
        success: true,
        data: updatedUser
      };
      setup(function() {
        $httpBackend.expectPUT('/api/auth').respond(201, successResp);
        dfd = $auth.updateAccount({
          operating_thetan: 123
        });
        return $httpBackend.flush();
      });
      test('user update event is broadcast by $rootScope', function() {
        return assert($rootScope.$broadcast.calledWithMatch('auth:account-update-success', successResp));
      });
      test('user object is updated', function() {
        return assert.deepEqual($rootScope.user, updatedUser);
      });
      return test('promise is resolved', function() {
        var resolved;
        resolved = false;
        dfd.then(function() {
          return resolved = true;
        });
        $timeout.flush();
        return assert(resolved);
      });
    });
    return suite('failed update', function() {
      var failedResp;
      failedResp = {
        success: false,
        errors: ['(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧']
      };
      setup(function() {
        $httpBackend.expectPUT('/api/auth').respond(403, failedResp);
        dfd = $auth.updateAccount({
          operating_thetan: 123
        });
        return $httpBackend.flush();
      });
      test('user update event is broadcast by $rootScope', function() {
        return assert($rootScope.$broadcast.calledWithMatch('auth:account-update-error', failedResp));
      });
      return test('promise is rejected', function() {
        var caught;
        caught = false;
        dfd["catch"](function() {
          return caught = true;
        });
        $timeout.flush();
        return assert(caught);
      });
    });
  });

}).call(this);
